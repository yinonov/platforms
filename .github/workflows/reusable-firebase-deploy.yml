# Reusable workflow for Firebase Hosting deploys
# Supports multiple apps via input parameters

name: Firebase Hosting Deploy
on:
  workflow_call:
    inputs:
      app_dir:
        required: true
        type: string
      project_id:
        required: true
        type: string
      channel_id:
        required: false
        type: string
        default: ""
      function_runtime:
        required: false
        type: string
        default: "nodejs20"
    secrets:
      repo_token:
        required: true
      firebase_service_account:
        required: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          cd ${{ inputs.app_dir }}
          npm ci
      - name: Build app
        run: |
          cd ${{ inputs.app_dir }}
          npm run build
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.repo_token }}
          firebaseServiceAccount: ${{ secrets.firebase_service_account }}
          projectId: ${{ inputs.project_id }}
          entryPoint: ${{ inputs.app_dir }}
          channelId: ${{ inputs.channel_id }}
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Install Functions dependencies
        run: |
          cd ${{ inputs.app_dir }}/functions
          npm ci
      - name: Build Functions (TypeScript)
        run: |
          cd ${{ inputs.app_dir }}/functions
          npm run build
      - name: Write service account key
        run: echo "${{ secrets.firebase_service_account }}" > ${{ inputs.app_dir }}/functions/sa-key.json
      - name: Deploy Firebase Functions (all)
        run: |
          cd ${{ inputs.app_dir }}/functions
          export GOOGLE_APPLICATION_CREDENTIALS=./sa-key.json
          firebase deploy --only functions --project ${{ inputs.project_id }}
